name: Epic Completion Detection
on:
  push:
    branches:
      - 'epic-*-*'

jobs:
  detect-epic-completion:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, 'Epic') && contains(github.event.head_commit.message, 'Complete')
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Extract epic number
        id: extract-epic
        run: |
          # Extract epic number from commit message
          EPIC_NUMBER=$(echo "${{ github.event.head_commit.message }}" | grep -o 'Epic [0-9]*' | grep -o '[0-9]*')
          echo "epic_number=$EPIC_NUMBER" >> $GITHUB_OUTPUT
          
          # Extract epic name from branch
          BRANCH_NAME="${{ github.ref_name }}"
          EPIC_NAME=$(echo "$BRANCH_NAME" | sed 's/epic-[0-9]*-//')
          echo "epic_name=$EPIC_NAME" >> $GITHUB_OUTPUT
          
          echo "Detected Epic $EPIC_NUMBER completion: $EPIC_NAME"
      
      - name: Create epic completion PR
        run: |
          # Create PR to main with epic-complete label
          gh pr create \
            --title "Epic ${{ steps.extract-epic.outputs.epic_number }} Complete" \
            --body "Epic ${{ steps.extract-epic.outputs.epic_number }}: ${{ steps.extract-epic.outputs.epic_name }} has been completed.
          
          ## Epic Summary
          - **Epic Number:** ${{ steps.extract-epic.outputs.epic_number }}
          - **Epic Name:** ${{ steps.extract-epic.outputs.epic_name }}
          - **Completed:** $(date +%Y-%m-%d)
          
          ## Next Steps
          - [ ] Review the changes
          - [ ] Merge this PR
          - [ ] Devlog post will be automatically generated
          - [ ] Review and enhance the generated post" \
            --label "epic-complete" \
            --base main
      
      - name: Generate devlog post
        uses: actions/github-script@v7
        with:
          script: |
            const fs = require('fs');
            const path = require('path');
            const { execSync } = require('child_process');
            
            const epicNumber = '${{ steps.extract-epic.outputs.epic_number }}';
            const epicName = '${{ steps.extract-epic.outputs.epic_name }}';
            
            // Create devlog directory structure
            const devlogDir = 'devlog/src/content/blog/_drafts';
            if (!fs.existsSync(devlogDir)) {
              fs.mkdirSync(devlogDir, { recursive: true });
            }
            
            // Get commits for this epic
            const branchName = `epic-${epicNumber}-${epicName}`;
            const commits = execSync(`git log main..${branchName} --oneline`, { encoding: 'utf8' })
              .split('\n')
              .filter(line => line.trim())
              .map(line => {
                const [hash, ...messageParts] = line.split(' ');
                return {
                  hash: hash,
                  message: messageParts.join(' ')
                };
              });
            
            // Generate post content
            const postContent = `---
title: "Epic ${epicNumber} Complete — ${epicName.replace(/-/g, ' ').replace(/\b\w/g, l => l.toUpperCase())}"
description: "Epic ${epicNumber} completion summary with technical insights and scouting context"
publishDate: ${new Date().toISOString().split('T')[0]}
tags: [devlog, epic-complete, epic-${epicNumber}]
scoutingContext: "How Epic ${epicNumber} helps scout leaders"
---

## Epic ${epicNumber} Complete

And so we reach the end of Epic ${epicNumber}, like a patrol returning from a successful expedition—tired, wiser, and with slightly fewer socks than we started with.

## What We Built

[Epic ${epicNumber} summary will be generated here based on planning.md and git history]

## Technical Insights

[Technical details extracted from commits and planning.md]

## Scouting Impact

[How this epic helps scout leaders in their daily work]

## What's Next

[Preview of upcoming epic based on planning.md]

---

*Generated from Epic ${epicNumber} completion on ${new Date().toISOString().split('T')[0]}*
*Total commits in Epic ${epicNumber}: ${commits.length}*
*Branch: ${branchName}*
`;
            
            // Write the post
            const filename = `epic-${epicNumber}-completion-${new Date().toISOString().split('T')[0]}.md`;
            const filepath = path.join(devlogDir, filename);
            fs.writeFileSync(filepath, postContent);
            
            console.log(`Epic ${epicNumber} completion post generated: ${filepath}`);
            
            // Commit the generated post
            try {
              execSync('git config user.name "github-actions[bot]"');
              execSync('git config user.email "41898282+github-actions[bot]@users.noreply.github.com"');
              execSync('git add .');
              execSync(`git commit -m "feat(devlog): generate Epic ${epicNumber} completion post"`);
              execSync('git push');
              
              console.log(`Epic ${epicNumber} completion post committed`);
            } catch (error) {
              console.log('Could not commit post automatically. Post saved to:', filepath);
            }
