name: Epic Completion Detection
on:
  push:
    branches:
      - 'epic-*-*'

permissions:
  contents: write
  pull-requests: write

jobs:
  detect-epic-completion:
    runs-on: ubuntu-latest
    if: contains(github.event.head_commit.message, 'Epic') && contains(github.event.head_commit.message, 'Complete')
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
      
      - name: Extract epic number
        id: extract-epic
        run: |
          # Extract epic number from commit message
          EPIC_NUMBER=$(echo "${{ github.event.head_commit.message }}" | grep -o 'Epic [0-9]*' | grep -o '[0-9]*')
          echo "epic_number=$EPIC_NUMBER" >> $GITHUB_OUTPUT
          
          # Extract epic name from branch
          BRANCH_NAME="${{ github.ref_name }}"
          EPIC_NAME=$(echo "$BRANCH_NAME" | sed 's/epic-[0-9]*-//')
          echo "epic_name=$EPIC_NAME" >> $GITHUB_OUTPUT
          
          echo "Detected Epic $EPIC_NUMBER completion: $EPIC_NAME"
          echo "Epic number: $EPIC_NUMBER"
          echo "Epic name: $EPIC_NAME"
      
      - name: Generate devlog post
        run: |
          # Create devlog directory structure
          mkdir -p devlog/src/content/blog/_drafts
          
          # Generate post filename
          POST_DATE=$(date +%Y-%m-%d)
          POST_FILENAME="epic${{ steps.extract-epic.outputs.epic_number }}-retrospective.md"
          
          # Create the post content
          cat > "devlog/src/content/blog/_drafts/$POST_FILENAME" << EOF
          ---
          title: "Epic ${{ steps.extract-epic.outputs.epic_number }} Complete â€” ${{ steps.extract-epic.outputs.epic_name }}"
          description: "Epic ${{ steps.extract-epic.outputs.epic_number }} retrospective and lessons learned"
          publishDate: $POST_DATE
          tags: [devlog, epic-complete, ${{ steps.extract-epic.outputs.epic_name }}]
          scoutingContext: "How this epic improves the scouting experience"
          epicNumber: ${{ steps.extract-epic.outputs.epic_number }}
          epicName: "${{ steps.extract-epic.outputs.epic_name }}"
          status: draft
          ---
          
          ## Epic ${{ steps.extract-epic.outputs.epic_number }} Complete: ${{ steps.extract-epic.outputs.epic_name }}
          
          Another epic completed! This time we tackled **${{ steps.extract-epic.outputs.epic_name }}** and learned some valuable lessons along the way.
          
          ### What We Accomplished
          
          [To be filled with specific achievements from this epic]
          
          ### Key Learnings
          
          [To be filled with lessons learned and insights]
          
          ### Next Steps
          
          [To be filled with what comes next]
          
          ---
          
          *This post was automatically generated when Epic ${{ steps.extract-epic.outputs.epic_number }} was completed.*
          EOF
          
          echo "Generated devlog post: devlog/src/content/blog/_drafts/$POST_FILENAME"
      
      - name: Commit and push generated post
        run: |
          # Configure git
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # Add the generated post
          git add "devlog/src/content/blog/_drafts/$POST_FILENAME"
          
          # Commit the post
          git commit -m "Add Epic ${{ steps.extract-epic.outputs.epic_number }} devlog post

          - Generated automatically on epic completion
          - Post: $POST_FILENAME
          - Epic: ${{ steps.extract-epic.outputs.epic_name }}"
          
          # Push the commit
          git push origin ${{ github.ref_name }}
      
      - name: Create epic completion PR
        env:
          GH_TOKEN: ${{ github.token }}
        run: |
          # Debug: Check token permissions
          echo "Checking GitHub token permissions..."
          gh auth status
          
          # Debug: List existing PRs
          echo "Existing PRs:"
          gh pr list --limit 5
          
          # Create PR to main with epic-complete label
          echo "Creating PR..."
          gh pr create \
            --title "Epic ${{ steps.extract-epic.outputs.epic_number }} Complete" \
            --body "Epic ${{ steps.extract-epic.outputs.epic_number }}: ${{ steps.extract-epic.outputs.epic_name }} has been completed.
          
          ## Epic Summary
          - **Epic Number:** ${{ steps.extract-epic.outputs.epic_number }}
          - **Epic Name:** ${{ steps.extract-epic.outputs.epic_name }}
          - **Completed:** $(date +%Y-%m-%d)
          
          ## Next Steps
          - [ ] Review the changes
          - [ ] Merge this PR
          - [ ] Devlog post has been automatically generated in \`devlog/src/content/blog/_drafts/\`
          - [ ] Review and enhance the generated post
          - [ ] Move post to \`_published\` folder when ready" \
            --base master
